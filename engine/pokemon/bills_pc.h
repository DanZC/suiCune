void v_DepositPKMN(void);
void BillsPCDepositJumptable(void);
void BillsPCDepositFuncDeposit(void);
void BillsPCDepositFuncStats(void);
void BillsPCDepositFuncRelease(void);
void BillsPCDepositFuncCancel(void);
extern const struct MenuHeader BillsPCDepositMenuHeader;
void BillsPCClearThreeBoxes(void);
void v_WithdrawPKMN(void);
void BillsPC_Withdraw(void);
void v_MovePKMNWithoutMail(void);
void BillsPC_InitRAM(void);
void BillsPC_IncrementJumptableIndex(void);
void BillsPC_EndJumptableLoop(void);
// u8_flag_s v_StatsScreenDPad(uint8_t* hl);
// u8_flag_s Withdraw_UpDown(void);
// u8_flag_s MoveMonWithoutMail_DPad(void);
// u8_flag_s MoveMonWithoutMail_DPad_2(void);
// u8_flag_s BillsPC_PressUp(void);
// u8_flag_s BillsPC_PressDown(uint8_t d, uint8_t e);
// u8_flag_s BillsPC_PressLeft(void);
// u8_flag_s BillsPC_PressRight(void);
// u8_flag_s BillsPC_JoypadDidNothing(void);
// u8_flag_s BillsPC_UpDownDidSomething(void);
// u8_flag_s BillsPC_LeftRightDidSomething(void);
// void BillsPC_PlaceString(uint8_t* de);
void BillsPC_MoveMonWOMail_BoxNameAndArrows(void);
void BillsPC_BoxName(void);
void PCMonInfo(void);
// void BillsPC_LoadMonStats(void);
void BillsPC_RefreshTextboxes(void);
void CopyBoxmonSpecies(void);
// species_t BillsPC_GetSelectedPokemonSpecies(void);
void BillsPC_UpdateSelectionCursor(void);
void BillsPC_UpdateInsertCursor(void);
void BillsPC_FillBox(void);
bool BillsPC_CheckSpaceInDestination(void);
// bool BillsPC_CheckMail_PreventBlackout(void);
// bool BillsPC_IsMonAnEgg(void);
// void BillsPC_StatsScreen(void);
void StatsScreenDPad(void);
// void BillsPC_CopyMon(void);
// bool DepositPokemon(void);
// bool TryWithdrawPokemon(void);
void ReleasePKMN_ByePKMN(void);
void MovePKMNWitoutMail_InsertMon(void);
// void CopySpeciesToTemp(const uint8_t* hl);
// void CopyNicknameToTemp(const uint8_t (*hl)[MON_NAME_LENGTH]);
// void CopyOTNameToTemp(const uint8_t (*hl)[NAME_LENGTH]);
// void CopyMonToTemp(const struct PartyMon* hl);
// void CopyBoxMonToTemp(const struct BoxMon* hl);
uint32_t GetBoxPointer(uint8_t b);
void BillsPC_ApplyPalettes(uint8_t a);
void BillsPC_Jumptable(void);
void BillsPC_InitGFX(void);
extern const char PCSelectLZ[];
extern const char PCMailGFX[];
extern const char PCString_ChooseaPKMN[];
extern const char PCString_WhatsUp[];
extern const char PCString_ReleasePKMN[];
extern const char PCString_MoveToWhere[];
extern const char PCString_ItsYourLastPKMN[];
extern const char PCString_TheresNoRoom[];
extern const char PCString_NoMoreUsablePKMN[];
extern const char PCString_RemoveMail[];
extern const char PCString_ReleasedPKMN[];
extern const char PCString_Bye[];
extern const char PCString_Stored[];
extern const char PCString_Got[];
void PCString_Non(void);
extern const char PCString_BoxFull[];
extern const char PCString_PartyFull[];
extern const char PCString_NoReleasingEGGS[];
void v_ChangeBox(void);
void BillsPC_ClearTilemap(void);
extern const struct MenuHeader v_ChangeBox_MenuHeader;
uint8_t* GetBoxName(uint8_t a);
void BillsPC_PrintBoxCountAndCapacity(void);
uint8_t GetBoxCount(void);
void BillsPC_PrintBoxName(void);
void BillsPC_ChangeBoxSubmenu(void);
// void BillsPC_PlaceChooseABoxString(void);
// void BillsPC_PlaceWhatsUpString(void);
// void BillsPC_PlaceEmptyBoxString_SFX(void);
// void BillsPC_PlaceChangeBoxString(uint8_t* de);
