bool TryAddMonToParty(species_t species, uint8_t level);
bool GeneratePartyMonStats(struct PartyMon* hl, species_t species, uint8_t level, uint8_t monType, uint8_t battleMode);
void FillPP(uint8_t* de, const move_t* hl);
bool AddTempmonToParty(void);
bool SendGetMonIntoFromBox(uint8_t param);
bool CloseSRAM_And_SetCarryFlag(const struct Box* box);
void RestorePPOfDepositedPokemon(struct Box* box, uint8_t b);
bool RetrieveMonFromDayCareMan(void);
bool RetrieveMonFromDayCareLady(void);
bool RetrieveBreedmon(void);
void GetLastPartyMon(void);
void DepositMonWithDayCareMan(uint8_t a);
void DepositMonWithDayCareLady(uint8_t a);
bool SendMonIntoBox(void);
bool GiveEgg(void);
extern const char String_Egg[];
void RemoveMonFromPartyOrBox(uint8_t param);
void ComputeNPCTrademonStats(uint8_t curPartyMon);
void CalcMonStats(uint16_t* stats, const uint16_t* statExp, uint16_t dvs, uint8_t b);
void CalcMonStats_PartyMon(struct PartyMon* mon, uint8_t b);
void CalcMonStats_BattleMon(struct BattleMon* mon);
uint16_t CalcMonStatC(const uint16_t* statExp, uint16_t dvs, uint8_t b, uint8_t c);
uint8_t GivePoke(uint8_t b, const char* nickname, const char* otName);
extern const txt_cmd_s WasSentToBillsPCText[];
void InitNickname(uint8_t* hl);
