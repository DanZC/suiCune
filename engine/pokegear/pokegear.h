void PokeGear(void);
void PokeGear_InitTilemap(void);
void PokeGear_InitTilemap_Conv(void);
void Pokegear_LoadGFX(void);
void Pokegear_LoadGFX_Conv(void);
//void FastShipGFX(void);
void InitPokegearModeIndicatorArrow(void);
void InitPokegearModeIndicatorArrow_Conv(void);
void AnimatePokegearModeIndicatorArrow(void);
void AnimatePokegearModeIndicatorArrow_Conv(struct SpriteAnim* bc);
void TownMap_GetCurrentLandmark(void);
uint8_t TownMap_GetCurrentLandmark_Conv(void);
void TownMap_InitCursorAndPlayerIconPositions(void);
void TownMap_InitCursorAndPlayerIconPositions_Conv(void);
void Pokegear_InitJumptableIndices(void);
void Pokegear_InitJumptableIndices_Conv(void);
void InitPokegearTilemap(void);
void InitPokegearTilemap_Conv(void);
void InitPokegearTilemap_UpdateBGMap_Conv(void);
void InitPokegearTilemap_PlacePhoneBars_Conv();
void Pokegear_FinishTilemap(void);
void Pokegear_FinishTilemap_Conv(void);
void PokegearJumptable(void);
void PokegearClock_Init(void);
void PokegearClock_Init_Conv(void);
void PokegearClock_Joypad(void);
void Pokegear_UpdateClock(void);
void Pokegear_UpdateClock_Conv(void);
void PokegearMap_CheckRegion(void);
void PokegearMap_Init(void);
void PokegearMap_KantoMap(void);
void PokegearMap_JohtoMap(void);
void PokegearMap_ContinueMap(void);
void PokegearMap_ContinueMap_Conv(u8_pair_s de);
void PokegearMap_InitPlayerIcon(void);
void PokegearMap_InitPlayerIcon_Conv(uint8_t landmark);
void PokegearMap_InitCursor(void);
struct SpriteAnim* PokegearMap_InitCursor_Conv(uint8_t landmark);
void PokegearMap_UpdateLandmarkName(void);
void PokegearMap_UpdateLandmarkName_Conv(uint8_t landmark);
void PokegearMap_UpdateCursorPosition(void);
void PokegearMap_UpdateCursorPosition_Conv(struct SpriteAnim* bc, uint8_t landmark);
void TownMap_GetKantoLandmarkLimits(void);
u8_pair_s TownMap_GetKantoLandmarkLimits_Conv(void);
void PokegearRadio_Init(void);
void PokegearRadio_Joypad(void);
void PokegearPhone_Init(void);
void PokegearPhone_Init_Conv(void);
void PokegearPhone_Joypad(void);
void PokegearPhone_MakePhoneCall(void);
void PokegearPhone_FinishPhoneCall(void);
void PokegearPhone_GetDPad(void);
void PokegearPhone_UpdateCursor(void);
void PokegearPhone_UpdateDisplayList(void);
void PokegearPhone_DeletePhoneNumber(void);
void PokegearPhoneContactSubmenu(void);
bool PokegearPhoneContactSubmenu_Conv(void);
void GetAMPMHours(void);
void Pokegear_SwitchPage(void);
void Pokegear_SwitchPage_Conv(uint8_t c, uint8_t b);
void ExitPokegearRadio_HandleMusic(void);
void DeleteSpriteAnimStruct2ToEnd(void);
void Pokegear_LoadTilemapRLE(void);
void Pokegear_LoadTilemapRLE_Conv(uint16_t de);
void Pokegear_LoadTilemapRLE_Conv2(const char* path);
extern const txt_cmd_s PokegearAskWhoCallText[];
extern const txt_cmd_s PokegearPressButtonText[];
extern const txt_cmd_s PokegearAskDeleteText[];
// void PokegearSpritesGFX(void);
// void RadioTilemapRLE(void);
// void PhoneTilemapRLE(void);
// void ClockTilemapRLE(void);
void v_UpdateRadioStation(void);
void v_UpdateRadioStation_Conv(void);
void AnimateTuningKnob(void);
void AnimateTuningKnob_Conv(struct SpriteAnim* bc);
void UpdateRadioStation(void);
void UpdateRadioStation_Conv(void);
void LoadPokegearRadioChannelPointer(void);
// void RadioChannels(void);
void LoadStation_OaksPokemonTalk(void);
const char* LoadStation_OaksPokemonTalk_Conv(void);
void LoadStation_PokedexShow(void);
const char* LoadStation_PokedexShow_Conv(void);
void LoadStation_PokemonMusic(void);
const char* LoadStation_PokemonMusic_Conv(void);
void LoadStation_LuckyChannel(void);
const char* LoadStation_LuckyChannel_Conv(void);
void LoadStation_BuenasPassword(void);
const char* LoadStation_BuenasPassword_Conv(void);
extern const char BuenasPasswordName[];
extern const char NotBuenasPasswordName[];
void LoadStation_UnownRadio(void);
const char* LoadStation_UnownRadio_Conv(void);
void LoadStation_PlacesAndPeople(void);
const char* LoadStation_PlacesAndPeople_Conv(void);
void LoadStation_LetsAllSing(void);
const char* LoadStation_LetsAllSing_Conv(void);
void LoadStation_RocketRadio(void);
const char* LoadStation_RocketRadio_Conv(void);
void LoadStation_PokeFluteRadio(void);
const char* LoadStation_PokeFluteRadio_Conv(void);
void LoadStation_EvolutionRadio(void);
const char* LoadStation_EvolutionRadio_Conv(void);
void DummyLoadStation(void);
void RadioMusicRestartDE(void);
void RadioMusicRestartDE_Conv(uint16_t de);
void RadioMusicRestartPokemonChannel(void);
void RadioMusicRestartPokemonChannel_Conv(void);
void Radio_BackUpFarCallParams(void);
void Radio_BackUpFarCallParams_Conv(void (*hl)(void));
void NoRadioStation(void);
void NoRadioStation_Conv(void);
void NoRadioMusic(void);
void NoRadioMusic_Conv(void);
void NoRadioName(void);
void NoRadioName_Conv(void);
extern const char OaksPKMNTalkName[];
extern const char PokedexShowName[];
extern const char PokemonMusicName[];
extern const char LuckyChannelName[];
extern const char UnownStationName[];
extern const char PlacesAndPeopleName[];
extern const char LetsAllSingName[];
extern const char PokeFluteStationName[];
void v_TownMap(void);
void PlayRadio(void);
void PlayRadio_Conv(uint8_t e);
extern const char* (*const PlayRadioStationPointers[])(void);
void LoadStation_PokemonChannel(void);
const char* LoadStation_PokemonChannel_Conv(void);
void PokegearMap(void);
void PokegearMap_Conv(uint8_t e);
uint8_t v_FlyMap(void);
void TownMapBubble(void);
void GetMapCursorCoordinates(void);
bool CheckIfVisitedFlypoint(uint8_t fp);
uint8_t HasVisitedSpawn(uint8_t c);
void Pokegear_DummyFunction(void);
void FlyMap(void);
void Pokedex_GetArea(uint8_t e, species_t species);
void TownMapBGUpdate(void);
void TownMapBGUpdate_Conv(uint16_t hl);
void FillJohtoMap(void);
void FillJohtoMap_Conv(void);
void FillKantoMap(void);
void FillKantoMap_Conv(void);
void FillTownMap(void);
void FillTownMap_Conv(const uint8_t* map);
void TownMapPals(void);
void TownMapPals_Conv(void);
void TownMapMon(void);
struct SpriteAnim* TownMapMon_Conv(void);
void TownMapPlayerIcon(void);
struct SpriteAnim* TownMapPlayerIcon_Conv(uint8_t location);
void LoadTownMapGFX(void);
void LoadTownMapGFX_Conv(void);
extern const char JohtoMap[];
extern const char KantoMap[];
extern const char PokedexNestIconGFX[];
extern const char FlyMapLabelBorderGFX[];
uint8_t EntireFlyMap(void);
//#include "gfx/pokegear/fast_ship.2bpp"
//#include "gfx/pokegear/pokegear_sprites.2bpp.lz"
//#include "gfx/pokegear/radio.tilemap.rle"
//#include "gfx/pokegear/phone.tilemap.rle"
//#include "gfx/pokegear/clock.tilemap.rle"
//#include "data/maps/flypoints.h"
//#include "gfx/pokegear/town_map_palette_map.h"
//#include "gfx/pokegear/johto.bin"
//#include "gfx/pokegear/kanto.bin"
//#include "gfx/pokegear/dexmap_nest_icon.2bpp"
//#include "gfx/pokegear/flymap_label_border.1bpp"
