struct StepVector {
    int8_t x;
    int8_t y;
    uint8_t duration;
    uint8_t speed;
};
void DeleteMapObject(struct Object* obj);
// bool CheckObjectStillVisible(struct Object* bc);
// void HandleStepType(struct Object* bc);
// void HandleObjectAction(struct Object* bc);
// void HandleFrozenObjectAction(struct Object* bc);
// void v_CallFrozenObjectAction(struct Object* bc);
// void CallObjectAction(struct Object* bc, int column);
// uint8_t CopyNextCoordsTileToStandingCoordsTile(struct Object* bc);
// void CopyStandingCoordsTileToNextCoordsTile(struct Object* bc);
void UpdateTallGrassFlags(struct Object* bc);
// void SetTallGrassFlags(struct Object* bc, uint8_t a);
void UselessAndA(void);
// void EndSpriteMovement(struct Object* bc);
void InitStep(struct Object* bc, uint8_t a);
// void GetNextTile(struct Object* bc);
// struct StepVector AddStepVector(struct Object* bc);
// struct StepVector GetStepVector(struct Object* bc);
// void StepVectors(void);
extern const struct StepVector StepVectors[];
// int8_t GetStepVectorSign(int8_t a);
// void UpdatePlayerStep(struct Object* bc);
void GetMapObjectField(void);
uint8_t RestoreDefaultMovement(struct Object* bc);
void ObjectMovementByte_ZeroAnonJumptableIndex(void);
void ObjectMovementByte_IncAnonJumptableIndex(struct Object* bc);
void ObjectMovementByte_DecAnonJumptableIndex(struct Object* bc);
void ObjectMovementByte_AnonJumptable(void);
void Field1c_ZeroAnonJumptableIndex(struct Object* bc);
void Field1c_IncAnonJumptableIndex(struct Object* bc);
void Field1c_AnonJumptable(void);
void Field1c_GetAnonJumptableIndex(void);
void Field1c_SetAnonJumptableIndex(void);
// void StepFunction_Reset(struct Object* bc);
// void StepFunction_FromMovement(struct Object* bc);
void MovementFunction_Null(struct Object* bc);
void MovementFunction_RandomWalkY(struct Object* bc);
void MovementFunction_RandomWalkX(struct Object* bc);
void MovementFunction_RandomWalkXY(struct Object* bc);
void MovementFunction_RandomSpinSlow(struct Object* bc);
void MovementFunction_RandomSpinFast(struct Object* bc);
void MovementFunction_Standing(struct Object* bc);
void MovementFunction_ObeyDPad(struct Object* bc);
void MovementFunction_Indexed1(struct Object* bc);
void MovementFunction_Indexed2(struct Object* bc);
void MovementFunction_0a(struct Object* bc);
void MovementFunction_0b(struct Object* bc);
void MovementFunction_0c(struct Object* bc);
void MovementFunction_0d(struct Object* bc);
void MovementFunction_0e(struct Object* bc);
void MovementFunction_Follow(struct Object* bc);
void MovementFunction_Script(struct Object* bc);
void MovementFunction_Strength(struct Object* bc);
void MovementFunction_FollowNotExact(struct Object* bc);
void MovementFunction_BigStanding(struct Object* bc);
void MovementFunction_Bouncing(struct Object* bc);
void MovementFunction_SpinCounterclockwise(struct Object* bc);
void MovementFunction_SpinClockwise(struct Object* bc);
void v_MovementSpinInit(struct Object* bc);
void v_MovementSpinRepeat(struct Object* bc);
void v_MovementSpinTurnLeft(struct Object* bc);
void v_MovementSpinTurnRight(struct Object* bc);
// void v_MovementSpinNextFacing(struct Object* bc, const uint8_t* de);
void MovementFunction_Shadow(struct Object* bc);
void MovementFunction_Emote(struct Object* bc);
void MovementFunction_BoulderDust(struct Object* bc);
void MovementFunction_ShakingGrass(struct Object* bc);
struct Object* InitMovementField1dField1e(struct Object* bc);
void MovementFunction_ScreenShake(struct Object* bc);
void v_RandomWalkContinue(struct Object* bc, uint8_t a);
void RandomStepDuration_Slow(struct Object* bc);
void RandomStepDuration_Fast(struct Object* bc);
void v_SetRandomStepDuration(struct Object* bc, uint8_t a);
extern void (*const StepTypesJumptable[])(struct Object* bc);
void WaitStep_InPlace(struct Object* bc);
// void StepFunction_NPCJump(struct Object* bc);
// void StepFunction_PlayerJump(struct Object* bc);
// void StepFunction_TeleportFrom(struct Object* bc);
// void StepFunction_TeleportTo(struct Object* bc);
// void StepFunction_Skyfall(struct Object* bc);
// void StepFunction_GotBite(struct Object* bc);
// void StepFunction_RockSmash(struct Object* bc);
// void StepFunction_DigTo(struct Object* bc);
// void StepFunction_Sleep(struct Object* bc);
// void StepFunction_Delete(struct Object* bc);
// void StepFunction_Bump(struct Object* bc);
// void StepFunction_Restore(struct Object* bc);
// void StepFunction_Standing(struct Object* bc);
// void StepFunction_NPCWalk(struct Object* bc);
// void StepFunction_ContinueWalk(struct Object* bc);
// void StepFunction_PlayerWalk(struct Object* bc);
// void StepFunction_Turn(struct Object* bc);
// void StepFunction_StrengthBoulder(struct Object* bc);
// void StepFunction_TrackingObject(struct Object* bc);
// void StepFunction_14(struct Object* bc);
// void StepFunction_ScreenShake(struct Object* bc);
// void StepFunction_16(struct Object* bc);
// void StepFunction_17(struct Object* bc);
// void StepFunction_SkyfallTop(struct Object* bc);
void Stubbed_UpdateYOffset(void);
// void UpdateJumpPosition(struct Object* bc);
// uint8_t GetPlayerNextMovementByte(struct Object* bc);
// uint8_t GetMovementByte(struct Object* bc);
// uint8_t GetIndexedMovementByte1(struct Object* bc);
// uint8_t GetIndexedMovementByte2(struct Object* bc);
// void v_GetMovementObject(struct Object* bc);
// uint8_t GetMovementObject(struct Object* bc);
// void HandleMovementData(struct Object* bc, uint8_t (*hl)(struct Object*));
uint8_t JumpMovementPointer(struct Object* bc);
void ContinueReadingMovement(void);
// void DoMovementFunction(struct Object* bc, uint8_t a);
// void ApplyMovementToFollower(uint8_t a);
// uint8_t GetFollowerNextMovementByte(struct Object* bc);
void SpawnShadow(struct Object* bc);
void SpawnStrengthBoulderDust(struct Object* bc);
void SpawnEmote(struct Object* bc);
void ShakeGrass(struct Object* bc);
void ShakeScreen(struct Object* bc, uint8_t a);
void DespawnEmote(struct Object* bc);
// void InitTempObject(void);
// void CopyTempObjectData(struct Object* bc, const uint8_t* de);
void UpdateAllObjectsFrozen(void);
void RespawnPlayerAndOpponent(void);
void RespawnPlayer(void);
void RespawnObject(uint8_t a);
void HideAllObjects(void);
// bool UpdateObjectFrozen(struct Object* bc);
// void UpdateRespawnedObjectFrozen(struct Object* bc);
// bool SetFacing_Standing(struct Object* bc);
// void UpdateObjectNextTile(struct Object* bc);
// bool CheckObjectOnScreen(struct Object* bc);
// bool CheckObjectCoveredByTextbox(struct Object* bc);
void HandleNPCStep(void);
void ResetStepVector(void);
void DoStepsForAllObjects(void);
void RefreshPlayerSprite(void);
void TryResetPlayerAction(void);
void SpawnInCustomFacing(void);
void SpawnInFacingDown(void);
void v_ContinueSpawnFacing(uint8_t a);
void v_SetPlayerPalette(uint8_t d);
void StartFollow(uint8_t b, uint8_t c);
bool SetLeaderIfVisible(uint8_t a);
void StopFollow(void);
void ResetLeader(void);
bool SetFollowerIfVisible(uint8_t a);
void ResetFollower(void);
bool FreezeAllOtherObjects(uint8_t c);
void FreezeObject(void);
void FreezeAllObjects(void);
void v_UnfreezeFollowerObject(uint8_t c);
void UnfreezeAllObjects(void);
void UnfreezeObject(void);
void ResetObject(struct Object* bc);
void v_UpdateSprites(void);
void ApplyBGMapAnchorToObjects(void);
void InitSprites(void);
//#include "data/sprites/facings.h"
//#include "data/sprites/map_objects.h"
//#include "engine/overworld/map_object_action.h"
//#include "engine/overworld/movement.h"
