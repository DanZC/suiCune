void v_InitializeStartDay(void);
void ClearDailyTimers(void);
void InitCallReceiveDelay(void);
void NextCallReceiveDelay(void);
bool CheckReceiveCallTimer(void);
void InitOneDayCountdown(uint8_t* hl);
void InitNDaysCountdown(uint8_t* hl, uint8_t n);
bool CheckDayDependentEventHL(uint8_t* hl);
void RestartReceiveCallDelay(uint8_t a);
bool CheckReceiveCallDelay(void);
void RestartDailyResetTimer(void);
void CheckDailyResetTimer(void);
void SampleKenjiBreakCountdown(void);
void StartBugContestTimer(void);
bool CheckBugContestTimer(void);
void InitializeStartDay(void);
void CheckPokerusTick(void);
void SetUnusedTwoDayTimer(void);
void CheckUnusedTwoDayTimer(void);
void UnusedSetSwarmFlag(void);
void UnusedCheckSwarmFlag(void);
void RestartLuckyNumberCountdown(void);
bool v_CheckLuckyNumberShowFlag(void);
void DoMysteryGiftIfDayHasPassed(void);
bool UpdateTimeRemaining(uint8_t* hl, uint8_t a);
void GetSecondsSinceIfLessThan60(void);
uint8_t GetMinutesSinceIfLessThan60(void);
void GetHoursSinceIfLessThan24(void);
uint8_t GetDaysSince(void);
void GetTimeElapsed_ExceedsUnitLimit(void);
void CalcDaysSince(uint8_t* hl);
void CalcHoursDaysSince(void);
void CalcMinsHoursDaysSince(uint8_t* hl);
void CalcSecsMinsHoursDaysSince(uint8_t* hl);
void v_CalcMinsHoursDaysSince(uint8_t* hl, uint8_t carry);
void v_CalcHoursDaysSince(uint8_t* hl, uint8_t carry);
void v_CalcDaysSince(uint8_t* hl, uint8_t carry);
void CopyDayHourMinSecToHL(uint8_t* hl);
void CopyDayToHL(uint8_t* hl);
void CopyDayHourToHL(uint8_t* hl);
void CopyDayHourMinToHL(uint8_t* hl);
