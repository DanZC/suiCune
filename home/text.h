void ClearBox(tile_t* hl, uint8_t w, uint8_t h);
void FillBoxWithByte(tile_t* hl, uint8_t w, uint8_t h, uint8_t byte);
void ClearTilemap(void);
void ClearScreen(void);
void Textbox(tile_t* hl, uint8_t b, uint8_t c);
void TextboxBorder(tile_t* hl, uint8_t b, uint8_t c);
void TextboxPalette(uint8_t* hl, uint8_t c, uint8_t b);
void SpeechTextbox(void);
void GameFreakText(void);
const struct TextCmd* RadioTerminator(void);
void PrintText(const struct TextCmd* hl);
void PrintText_GB(uint8_t* hl);
void BuenaPrintText(const struct TextCmd* hl);
void BuenaPrintText_GB(uint8_t* hl);
void PrintTextboxText(const struct TextCmd* hl);
void PrintTextboxText_GB(uint8_t* hl);
void SetUpTextbox(void);
bool PlaceString(struct TextPrintState* state, uint8_t* hl);
void PlaceStringSimple(uint8_t* de, uint8_t* hl);
bool PlaceNextChar(struct TextPrintState* state);
// void DummyChar(void);
void NextChar(struct TextPrintState* state);
void MobileScriptChar(struct TextPrintState* state);
void PrintMomsName(struct TextPrintState* state);
void PrintPlayerName(struct TextPrintState* state);
void PrintRivalName(struct TextPrintState* state);
void PrintRedsName(struct TextPrintState* state);
void PrintGreensName(struct TextPrintState* state);
void TrainerChar(struct TextPrintState* state);
void TMChar(struct TextPrintState* state);
void PCChar(struct TextPrintState* state);
void RocketChar(struct TextPrintState* state);
void PlacePOKe(struct TextPrintState* state);
void PlaceKougeki(struct TextPrintState* state);
void SixDotsChar(struct TextPrintState* state);
void PlacePKMN(struct TextPrintState* state);
void PlacePOKE(struct TextPrintState* state);
void PlaceJPRoute(struct TextPrintState* state);
void PlaceWatashi(struct TextPrintState* state);
void PlaceKokoWa(struct TextPrintState* state);
void PlaceMoveTargetsName(struct TextPrintState* state);
void PlaceMoveUsersName(struct TextPrintState* state);
void PlaceBattlersName(struct TextPrintState* state, bool is_enemy);
void PlaceEnemysName(struct TextPrintState* state);
void PlaceGenderedPlayerName(struct TextPrintState* state);
void PlaceCommandCharacter(struct TextPrintState* state, uint8_t* de);
// void TMCharText(void);
// void TrainerCharText(void);
// void PCCharText(void);
// void RocketCharText(void);
// void PlacePOKeText(void);
// void KougekiText(void);
// void SixDotsCharText(void);
// void EnemyText(void);
// void PlacePKMNText(void);
// void PlacePOKEText(void);
// void String_Space(void);
// void PlaceJPRouteText(void);
// void PlaceWatashiText(void);
// void PlaceKokoWaText(void);
// void KunSuffixText(void);
// void ChanSuffixText(void);
void NextLineChar(struct TextPrintState* state);
void LineFeedChar(struct TextPrintState* state);
void CarriageReturnChar(struct TextPrintState* state);
void LineChar(struct TextPrintState* state);
void Paragraph(struct TextPrintState* state);
void v_ContText(struct TextPrintState* state);
void v_ContTextNoPause(struct TextPrintState* state);
void ContText(struct TextPrintState* state);
bool PlaceDexEnd(struct TextPrintState* state);
bool PromptText(struct TextPrintState* state);
bool DoneText(struct TextPrintState* state);
void NullChar(struct TextPrintState* state);
void TextScroll(struct TextPrintState* state);
void Text_WaitBGMap(void);
void Diacritic(void);
void LoadBlinkingCursor(void);
void UnloadBlinkingCursor(void);
void PlaceFarString(uint8_t bank, struct TextPrintState* state, uint8_t* hl);
// void PokeFluteTerminator(void);
void PlaceHLTextAtBC(uint8_t* bc, const struct TextCmd* hl);
void PlaceHLTextAtBC_GB(uint8_t* hl, uint8_t* bc);
void DoTextUntilTerminator(struct TextCmdState* state);
void DoTextUntilTerminator_GB(struct TextPrintState* state);
void DoTextUntilTerminator_TextCommand(struct TextCmdState* state, const struct TextCmd* cmd);
void DoTextUntilTerminator_TextCommand_GB(struct TextPrintState* state, uint8_t cmd);
// void TextCommands(void);
void TextCommand_START(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_START_GB(struct TextPrintState* state);
void TextCommand_RAM(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_RAM_GB(struct TextPrintState* state);
void TextCommand_FAR(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_FAR_GB(struct TextPrintState* state);
void TextCommand_BCD(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_BCD_GB(struct TextPrintState* state);
void TextCommand_MOVE(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_MOVE_GB(struct TextPrintState* state);
void TextCommand_BOX(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_BOX_GB(struct TextPrintState* state);
void TextCommand_LOW(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_LOW_GB(struct TextPrintState* state);
void TextCommand_PROMPT_BUTTON(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_PROMPT_BUTTON_GB(struct TextPrintState* state);
void TextCommand_SCROLL(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_SCROLL_GB(struct TextPrintState* state);
void TextCommand_START_ASM(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_START_ASM_GB(struct TextPrintState* state);
void TextCommand_DECIMAL(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_DECIMAL_GB(struct TextPrintState* state);
void TextCommand_PAUSE(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_PAUSE_GB(struct TextPrintState* state);
void TextCommand_SOUND(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_SOUND_GB(struct TextPrintState* state);
void TextCommand_CRY(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_CRY_GB(struct TextPrintState* state);
// void TextSFX(void);
void TextCommand_DOTS(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_DOTS_GB(struct TextPrintState* state);
void TextCommand_WAIT_BUTTON(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_WAIT_BUTTON_GB(struct TextPrintState* state);
void TextCommand_STRINGBUFFER(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_STRINGBUFFER_GB(struct TextPrintState* state);
void TextCommand_DAY(struct TextCmdState* state, const struct TextCmd* cmd);
void TextCommand_DAY_GB(struct TextPrintState* state);
